void Setup(SerialPort serial)
{
    serial.BaudRate = 115200;
    serial.StopBits = StopBits.One;
    serial.NewLine = "\n";
    serial.DtrEnable = true;
    serial.Parity = Parity.None;
}

void OnSerialReceived(string data)
{
    Console.WriteLine($"{PortName} => {data}");
    try
    {
        Parse(data);
        // Publish("Brownie", json);
    }
    catch (FormatException)
    {
        // nothing to do
    }
}

enum BoardName { None = 0, Mag = 0x01, Amb = 0x02, Mot = 0x03 }

void Parse(string s){
        // Board Name Check
        var boardName = (BoardName)(Convert.ToByte(s.Substring(27, 2), 16) & 0x1F);
        if(boardName != BoardName.Amb){
            Console.WriteLine("Not amb sensor");
            return;
        }

        // Number of sensors
        int sensors = Convert.ToByte(s.Substring(29, 2), 16);
        int p = 31;
        string sensorData = s.Substring(p);
        uint voltage=0;
        float temperature=0;
        float humidity=0;
        uint lux=0;
        for (int i = 0; i < sensors; i++)
        {
            int status = Convert.ToByte(s.Substring(p, 2), 16);
            int source = Convert.ToByte(s.Substring(p + 2, 2), 16);
            int ext = Convert.ToByte(s.Substring(p + 4, 2), 16);

            switch (source)
            {
                case 0x30: // Voltage(mV)
                    if (ext == 8)
                    {
                        voltage = Convert.ToUInt16(s.Substring(p + 8, 4), 16);
                    }
                    p += 12;
                    break;
                case 0x01: // Temperature
                    temperature = Convert.ToInt16(s.Substring(p + 8, 4), 16) / 100f;
                    p += 12;
                    break;
                case 0x02: // Humidity
                    humidity = Convert.ToUInt16(s.Substring(p + 8, 4), 16) / 100f;
                    p += 12;
                    break;
                case 0x03: // Lux
                    lux = Convert.ToUInt32(s.Substring(p + 8, 8), 16);
                    p += 16;
                    break;
                default:
                    break;
            }

        }
        // Logical Device ID
        int id = Convert.ToByte(s.Substring(23, 2), 16);
        float lqi = (7f*Convert.ToByte(s.Substring(9,2), 16)-1970f)/20f;

        Publish("Temperature", new { Id = $"AMB_{id:00}", Value = temperature} );
        Publish("Humidity", new {Id = $"AMB_{id:00}", Value = humidity} );
        Publish("Illuminance", new {Id = $"AMB_{id:00}", Value = lux} );
        Publish("Voltage", new {Id = $"AMB_{id:00}", Value = voltage / 1000.0} );
        Publish("Lqi", new {Id = $"AMB_{id:00}", Value = lqi} );
        Console.WriteLine($"id:{id}, temp:{temperature}, humi:{humidity}, lux:{lux}, vol:{voltage}, lqi:{lqi}");
}

void OnTopicReceived(string topic, string data){
    
}